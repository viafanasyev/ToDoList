* {
  box-sizing: border-box;
}

.app {
  min-height: 100vh;
  font-size: x-large;
  font-family: 'Roboto', sans-serif;
  display: flex;
  flex-direction: row;
  justify-content: space-between;

  // For side menu
  padding-left: 400px;
}

.menu {
  position: fixed;
  top: 0;
  left: 0;
  min-height: 100vh;

  padding-left: 30px;
  padding-right: 30px;
  padding-top: 10px;
  background: #fbfbfb;
  border-right: 1px solid #eee;
  filter: drop-shadow(0 0 5px #bbb);

  .text-input {
    width: 340px;
    margin: 10px 0 10px 0;
    font-size: large;
    font-family: 'Roboto', sans-serif;
    border-radius: 5px;
    border: 1px solid #bbb;
    padding: 15px;

    &-with-error {
      border-color: red;
    }

    &:hover,
    &:focus {
      outline: none;
      border-color: #000;
    }

    &-big {
      height: 8em;
      min-width: 340px;
      min-height: 8em;
      max-width: 340px;
      max-height: 20em;
    }
  }

  .input-error {
    color: red;
    font-size: smaller;
    padding: 0;
    margin: 0;

    &:empty:after {
      content: '.';
      visibility: hidden;
    }
  }

  .control-buttons {
    margin-top: 25px;
  }
}

.tasks-container {
  // Dirty hack to make container fill EXACTLY all free space
  // Without width: 0, long text in task-description will resize tasks-container-body
  width: 0;
  flex-grow: 1;

  margin-left: 15px;
  margin-right: 15px;
  margin-top: 25px;

  &-header {
    font-size: larger;
    text-align: center;
    white-space: nowrap;
  }

  &-body {
    padding: 5px;
    display: flex;
    flex-direction: column;
    //min-width: fit-content;
    max-width: 800px;
    margin: 20px auto 0 auto;

    .task-item {
      background: #fff;
      padding: 10px;
      border-radius: 15px;
      margin: 10px;
      filter: drop-shadow(0px 3px 3px rgb(210, 210, 210));

      &:hover {
        filter: drop-shadow(0px 4px 4px rgb(180, 180, 180));
      }

      .task-item-overall {
        display: flex;
        flex-direction: row;
        justify-content: space-between;

        .task-item-title {
          white-space: nowrap;
          overflow: hidden;
          text-overflow: ellipsis;

          &::first-letter {
            text-transform: uppercase;
          }

          &:after {
            // To create an empty space between title and priority
            content: '...';
            visibility: hidden;
          }
        }

        .task-item-priority {
          border-radius: 15px;
          padding: 3px;

          &:before {
            content: '!';
            color: rgba(0, 0, 0, 0.5);
          }
        }
      }

      .task-item-description {
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
        margin-left: 2em;
        color: gray;

        &:empty:after {
          content: '.';
          visibility: hidden;
        }
      }
    }
  }
}

.button {
  width: fit-content;
  font-size: large;
  border: 1px solid rgb(187, 187, 187);
  border-radius: 10px;
  background: #fff;
  padding: 14px 25px;
  margin: 10px 10px 10px 0;

  &:focus {
    outline: none;
    filter: drop-shadow(0 0 5px rgb(180, 180, 180));
  }

  &:hover {
    filter: drop-shadow(0 0 5px rgb(180, 180, 180));
  }

  &:active {
    background: #f5f5f5;
    transform: translateY(2px);
    filter: drop-shadow(0 0 3px rgb(170, 170, 170));
  }
}
